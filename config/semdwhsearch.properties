
#####################################################################
# data structures
#
# store the index in the database [boolean]
ds.useDbIndex = true

# number of inserts to send to the database together [integer]
ds.index.batchSize = 1000

# commit regularly after this number of inserts [integer]
ds.index.commitSize = 1000000

# purge duplicate detection in-memory structures to release memory at the given number of seen values [integer]
# hint: compute this like <avg value size> * this < available memory
ds.index.purgeSize = 1000000

# tokenize lookup key
ds.index.tokenizeKey = true


#####################################################################
# algorithm
#
# enable substring matching for querying classification index [boolean]
# hint: if substring matching is enabled, prefix matching is ignored.
algo.lookup.substringMatching = true

# enable prefix matching for querying classification index [boolean]
algo.lookup.prefixMatching = false

# enable use of lookup key in filter values instead of real value from database [boolean]
algo.filters.useLookupKey = true

# enable exact matching for result queries [boolean]
algo.sparql.exactMatching = false

# hint: if substring matching is enabled, prefix matching is ignored.
algo.sparql.substringMatching = true

# enable prefix matching for result queries [boolean]
algo.sparql.prefixMatching = false

